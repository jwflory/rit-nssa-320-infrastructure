# run role as:
# ansible-playbook playbook/podman --extra-vars "\
# container=<container name (should be 'progrium/stress')>\
# name=<custom name for reference>\
# volume=<volume name (name it 'stress_vol')>\
# cpu_workers=<spawn N workers spinning on sqrt()>\
# io_workers=<spawn N workers spinning on sync()>\
# vm_workers=<spawn N workers spinning on malloc()/free()>\
# vm_size=<malloc B bytes per vm worker (default is 256MB)>
# hdd_workers=<spawn N workers spinning on write()/unlink()>\
# hdd_size=<write B bytes per hdd worker>"

---
- name: import global variables
  include_vars:
    dir: "{{ inventory_dir }}/group_vars/"

- name: create a directory for stress to mount to
  file:
    state: directory
    path: "/docker/{{container}}"

- name: make a volume
  command: podman volume create {{volume}}


# Stress image options
# image based off: https://github.com/progrium/docker-stress
#  -?, --help         show this help statement
#      --version      show version statement
#  -v, --verbose      be verbose
#  -q, --quiet        be quiet
#  -n, --dry-run      show what would have been done
#  -t, --timeout N    timeout after N seconds
#      --backoff N    wait factor of N microseconds before work starts
#  -c, --cpu N        spawn N workers spinning on sqrt()
#  -i, --io N         spawn N workers spinning on sync()
#  -m, --vm N         spawn N workers spinning on malloc()/free()
#      --vm-bytes B   malloc B bytes per vm worker (default is 256MB)
#      --vm-stride B  touch a byte every B bytes (default is 4096)
#      --vm-hang N    sleep N secs before free (default is none, 0 is inf)
#      --vm-keep      redirty memory instead of freeing and reallocating
#  -d, --hdd N        spawn N workers spinning on write()/unlink()
#      --hdd-bytes B  write B bytes per hdd worker (default is 1GB)
#      --hdd-noclean  do not unlink files created by hdd workers
# Example: podman run -it stress --cpu 2 --io 2 --vm 2 --vm-bytes 128M --timeout 10s
# Note: Numbers may be suffixed with s,m,h,d,y (time) or B,K,M,G (size).

- name: run container
  command: podman run -dt --mount type=volume,source={{volume}},target=/docker/{{container}} --name {{name}} {{container}} --cpu {{cpu_workers}} --io {{io_workers}} --vm {{vm_workers}} --vm-bytes {{vm_size}} --hdd {{hdd_workers}} --hdd-bytes {{hdd_size}}


# - name: add container to host group
#   add_host:
#     hostname: {{container}}
#     ansible_connection: podman
